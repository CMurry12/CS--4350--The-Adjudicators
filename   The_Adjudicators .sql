CREATE TABLE USERS (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    FullName VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Role VARCHAR(100) NOT NULL
);

CREATE TABLE PROJECTS (
    ProjectID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    Description TEXT NOT NULL,
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES USERS(UserID) ON DELETE SET NULL
);

CREATE TABLE EVENTS (
    EventID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Date DATE NOT NULL,
    Location VARCHAR(255) NOT NULL,
    Level VARCHAR(100) NOT NULL,
    Status VARCHAR(50) NOT NULL
);

CREATE TABLE SCORING_CRITERIA (
    CriteriaID INT PRIMARY KEY AUTO_INCREMENT,
    CriteriaName VARCHAR(255) NOT NULL,
    Weight DECIMAL(5,2) NOT NULL,
    EventID INT,
    FOREIGN KEY (EventID) REFERENCES EVENTS(EventID) ON DELETE CASCADE
);

CREATE TABLE SCORES (
    ScoreID INT PRIMARY KEY AUTO_INCREMENT,
    ProjectID INT,
    EventID INT,
    CriteriaID INT,
    UserID INT,
    Score DECIMAL(5,2) NOT NULL,
    FOREIGN KEY (ProjectID) REFERENCES PROJECTS(ProjectID) ON DELETE CASCADE,
    FOREIGN KEY (EventID) REFERENCES EVENTS(EventID) ON DELETE CASCADE,
    FOREIGN KEY (CriteriaID) REFERENCES SCORING_CRITERIA(CriteriaID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES USERS(UserID) ON DELETE CASCADE
);

CREATE TABLE RANKINGS (
    RankPosition INT NOT NULL,
    UserID INT,
    ProjectID INT,
    EventID INT,
    TotalScore DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (RankPosition, EventID), 
    FOREIGN KEY (UserID) REFERENCES USERS(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ProjectID) REFERENCES PROJECTS(ProjectID) ON DELETE CASCADE,
    FOREIGN KEY (EventID) REFERENCES EVENTS(EventID) ON DELETE CASCADE
);
